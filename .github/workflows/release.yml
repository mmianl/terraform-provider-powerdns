name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  id-token: write

jobs:
  goreleaser:
    runs-on: ubuntu-latest
    environment: release
    steps:
      - uses: actions/checkout@v5
        with:
          # Allow goreleaser to access older tag information.
          fetch-depth: 0

      - uses: actions/setup-go@v6
        with:
          go-version-file: 'go.mod'
          cache: true

      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v6.3.0
        id: import_gpg
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          version: latest
          args: release --clean
        env:
          # GitHub sets the GITHUB_TOKEN secret automatically.
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GPG_FINGERPRINT: ${{ steps.import_gpg.outputs.fingerprint }}

      - name: Generate subject for release notes
        id: release-notes
        run: |
          # Get the latest tag
          latest_tag=$(git describe --tags --abbrev=0)
          echo "Latest tag: $latest_tag"

          # Get the previous tag
          previous_tag=$(git describe --tags --abbrev=0 HEAD~1 2>/dev/null || echo "")
          echo "Previous tag: $previous_tag"

          # Generate changelog
          if [ -n "$previous_tag" ]; then
            echo "## What's Changed" > release_notes.md
            git log --pretty=format:"- %s (%h)" ${previous_tag}..HEAD >> release_notes.md
          else
            echo "## Initial Release" > release_notes.md
            echo "First release of terraform-provider-powerdns" >> release_notes.md
          fi

          echo "subject<<EOF" >> "$GITHUB_OUTPUT"
          cat release_notes.md >> "$GITHUB_OUTPUT"
          echo "EOF" >> "$GITHUB_OUTPUT"

      - name: Update release with changelog
        uses: softprops/action-gh-release@v2.3.3
        with:
          body: ${{ steps.release-notes.outputs.subject }}
          append_body: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
