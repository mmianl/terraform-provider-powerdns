name: Check

on: [push, pull_request]

permissions:
  contents: read
  pull-requests: read
  security-events: write

jobs:
  security:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Run Trivy vulnerability scanner in repo mode
        uses: aquasecurity/trivy-action@0.28.0
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

  check:
    name: check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version-file: 'go.mod'
          cache: true

      - name: Cache Go modules
        uses: actions/cache@v4.3.0
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-check-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-check-
            ${{ runner.os }}-go-

      - name: Format check
        run: make fmtcheck

      - name: Run codespell
        uses: codespell-project/actions-codespell@v2
        with:
          skip: "*.png,*.jpg,*.jpeg,*.gif,*.svg,*.ico,*.webp,go.sum,go.mod,vendor"
          ignore_words_list: "aNULL"

      - name: Vet
        run: make vet

      - name: Run tests
        run: make test

      - name: Run tests with race detector
        run: make test TESTARGS="-race"

      - name: Upload coverage to Codecov
        if: matrix.go-version == '1.24'
        uses: codecov/codecov-action@v5.5.1
        with:
          file: ./coverage.out
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version-file: 'go.mod'
          cache: true

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v8
        with:
          version: latest
          args: --timeout=5m

  dependency-review:
    name: Dependency Review
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Dependency Review
        uses: actions/dependency-review-action@v4.8.0
